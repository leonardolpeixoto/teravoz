version: '3'
services:
  nginx:
    build:
      dockerfile: ./docker/nginx.dockerfile
      context: .
    image: leonardo/nginx
    container_name: nginx
    ports:
      - "8080:80"
    networks: 
      - production-network
    depends_on: 
      - "node1"
      # - "node2"
      # - "node3"
  mysql:
    image: mysql:5.7
    volumes:
      - ./db_data:/var/lib/mysql
    networks: 
      - production-network
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: teravoz
      MYSQL_DATABASE: teravoz
      MYSQL_USER: root
      MYSQL_PASSWORD: teravoz

  node1:
    build:
      dockerfile: ./docker/node.dockerfile
      context: .
    image: leonardo/teravoz
    container_name: teravoz-1
    ports:
      - "3000"
    networks: 
      - production-network
    depends_on:
      - "mysql"

  # node2:
  #   build:
  #     dockerfile: ./docker/node.dockerfile
  #     context: .
  #   image: leonardo/teravoz
  #   container_name: teravoz-2
  #   ports:
  #     - "3000"
  #   networks: 
  #     - production-network
  #   depends_on:
  #     - "mysql"

  # node3:
  #   build:
  #     dockerfile: ./docker/node.dockerfile
  #     context: .
  #   image: leonardo/teravoz
  #   container_name: teravoz-3
  #   ports:
  #     - "3000"
  #   networks: 
  #     - production-network
  #   depends_on:
  #     - "mysql"

networks: 
  production-network:
    driver: bridge